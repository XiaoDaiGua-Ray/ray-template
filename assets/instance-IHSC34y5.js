import{q as t,r as o,l as R}from"./hooks-2u1tWfGq.js";import{g as q}from"./utils-ZG9ktGpF.js";const d={baseURL:"",withCredentials:!1,timeout:5*1e3,headers:{"Content-Type":"application/json"}},y=(e,r)=>{t.removePendingRequest(e.config)},A=(e,r)=>{t.removePendingRequest(e.config)},p={implementResponseInterceptorArray:[y],implementResponseInterceptorErrorArray:[A]},{setImplement:c}=o(),E=()=>{const{implementResponseInterceptorArray:e}=p;c("implementResponseInterceptorArray",e,"ok")},f=()=>{const{implementResponseInterceptorErrorArray:e}=p;c("implementResponseInterceptorErrorArray",e,"error")},g=(e,r)=>{if(e){const n=e.headers;r.forEach(s=>{n[s.key]=s.value})}},k=(e,r)=>{const n=q(R.token);return e.url,{key:"X-TOKEN",value:n}},C=(e,r)=>{g(e,[k(e),{key:"Demo-Header-Key",value:"Demo Header Value"}])},P=(e,r)=>{t.removePendingRequest(e),t.addPendingRequest(e)},v=(e,r)=>{t.removePendingRequest(e)},m={implementRequestInterceptorArray:[C,P],implementRequestInterceptorErrorArray:[v]},{setImplement:a}=o(),H=()=>{const{implementRequestInterceptorArray:e}=m;a("implementRequestInterceptorArray",e,"ok")},h=()=>{const{implementRequestInterceptorErrorArray:e}=m;a("implementRequestInterceptorErrorArray",e,"error")},i=axios.create(d),{createAxiosInstance:u,beforeFetch:l,fetchError:I}=o();i.interceptors.request.use(e=>(u(e,"requestInstance"),H(),l("requestInstance","implementRequestInterceptorArray","ok"),e),e=>(h(),I("requestError",e,"implementRequestInterceptorErrorArray"),Promise.reject(e)));i.interceptors.response.use(e=>{u(e,"responseInstance"),E(),l("responseInstance","implementResponseInterceptorArray","ok");const{data:r}=e;return Promise.resolve(r)},e=>(f(),I("responseError",e,"implementResponseInterceptorErrorArray"),Promise.reject(e)));export{i as s};
