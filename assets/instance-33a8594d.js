import{a as l}from"./axios@1.5.0-82afda87.js";import{k as o,l as t,m as d,A as I}from"./index-8c40f85f.js";const R={baseURL:"",withCredentials:!1,timeout:5*1e3,headers:{"Content-Type":"application/json"}},{setImplement:c}=o(),q=(e,r)=>{t.removePendingRequest(e.config)},A=(e,r)=>{},E=()=>{c("implementResponseInterceptorArray",[q],"ok")},y=()=>{c("implementResponseInterceptorErrorArray",[A],"error")},k=(e,r)=>{if(e){const s=e.headers;r.forEach(n=>{s[n.key]=n.value})}},{setImplement:a}=o(),f=(e,r)=>{const s=d(I.token);return e.url,{key:"X-TOKEN",value:s}},P=(e,r)=>{k(e,[f(e),{key:"Demo-Header-Key",value:"Demo Header Value"}])},g=(e,r)=>{t.removePendingRequest(e),t.addPendingRequest(e)},v=(e,r)=>{},C=()=>{a("implementRequestInterceptorArray",[P,g],"ok")},H=()=>{a("implementRequestInterceptorErrorArray",[v],"error")},p=l.create(R),{createAxiosInstance:m,beforeFetch:u,fetchError:i}=o();p.interceptors.request.use(e=>(m(e,"requestInstance"),C(),u("requestInstance","implementRequestInterceptorArray","ok"),e),e=>(H(),i("requestError",e,"implementRequestInterceptorErrorArray"),Promise.reject(e)));p.interceptors.response.use(e=>{m(e,"responseInstance"),E(),u("responseInstance","implementResponseInterceptorArray","ok");const{data:r}=e;return Promise.resolve(r)},e=>(y(),i("responseError",e,"implementResponseInterceptorErrorArray"),t.removePendingRequest(e.config||{}),Promise.reject(e)));export{p as s};
